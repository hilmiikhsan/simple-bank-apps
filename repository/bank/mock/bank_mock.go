// Code generated by MockGen. DO NOT EDIT.
// Source: bank_repository_interface.go

// Package mock_bank is a generated GoMock package.
package mock_bank

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/simple-bank-apps/model"
)

// MockBankRepository is a mock of BankRepository interface.
type MockBankRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBankRepositoryMockRecorder
}

// MockBankRepositoryMockRecorder is the mock recorder for MockBankRepository.
type MockBankRepositoryMockRecorder struct {
	mock *MockBankRepository
}

// NewMockBankRepository creates a new mock instance.
func NewMockBankRepository(ctrl *gomock.Controller) *MockBankRepository {
	mock := &MockBankRepository{ctrl: ctrl}
	mock.recorder = &MockBankRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankRepository) EXPECT() *MockBankRepositoryMockRecorder {
	return m.recorder
}

// GetByAccountNumber mocks base method.
func (m *MockBankRepository) GetByAccountNumber(ctx context.Context, accountNumber string) (model.Bank, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByAccountNumber", ctx, accountNumber)
	ret0, _ := ret[0].(model.Bank)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByAccountNumber indicates an expected call of GetByAccountNumber.
func (mr *MockBankRepositoryMockRecorder) GetByAccountNumber(ctx, accountNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByAccountNumber", reflect.TypeOf((*MockBankRepository)(nil).GetByAccountNumber), ctx, accountNumber)
}

// List mocks base method.
func (m *MockBankRepository) List(ctx context.Context) ([]model.Bank, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]model.Bank)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockBankRepositoryMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockBankRepository)(nil).List), ctx)
}
