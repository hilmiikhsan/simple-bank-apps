// Code generated by MockGen. DO NOT EDIT.
// Source: bank_usecase_interface.go

// Package mock_bank is a generated GoMock package.
package mock_bank

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/simple-bank-apps/dto"
)

// MockBankUsecase is a mock of BankUsecase interface.
type MockBankUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockBankUsecaseMockRecorder
}

// MockBankUsecaseMockRecorder is the mock recorder for MockBankUsecase.
type MockBankUsecaseMockRecorder struct {
	mock *MockBankUsecase
}

// NewMockBankUsecase creates a new mock instance.
func NewMockBankUsecase(ctrl *gomock.Controller) *MockBankUsecase {
	mock := &MockBankUsecase{ctrl: ctrl}
	mock.recorder = &MockBankUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankUsecase) EXPECT() *MockBankUsecaseMockRecorder {
	return m.recorder
}

// GetListBank mocks base method.
func (m *MockBankUsecase) GetListBank(ctx context.Context) ([]dto.BankResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListBank", ctx)
	ret0, _ := ret[0].([]dto.BankResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListBank indicates an expected call of GetListBank.
func (mr *MockBankUsecaseMockRecorder) GetListBank(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListBank", reflect.TypeOf((*MockBankUsecase)(nil).GetListBank), ctx)
}
